head(airquality2)
qplot(Wind, Ozone, data = airquality2, facets = . ~ Month)
qplot(x = Wind,y = Ozone,data = airquality,facets = .~factor(Month))
qplot(Wind, Ozone, data = airquality2, facets = . ~ Month)
qplot(votes, rating, data = movies)
library(ggplot2)
qplot(votes, rating, data = movies)
library(ggplot2movies)
require(ggplot2movies)
require("ggplot2movies")
install.packages("ggplot2movies")
library(ggplot2movies)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
}as.character(cls_list)
as.character(cls_list)
sapply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
sapply(flag_colors,sum)/194
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags, unique)
ok()
sapply(flags, unique)
sapply(flags, class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(X = flags$population,flags$red,summary)
tapply(X = flags$population,flags$landmass,summary)
library(datasets)
rm(list = ls())
data("iris")
head(iris)
table(iris$Species)
tapply(iris$Sepal.Length,iris$Species,mean)
round(tapply(iris$Sepal.Length,iris$Species,mean),1)
apply(X = iris[,1:4],MARGIN = 2,mean)
data("mtcars")
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
round(tapply(iris$Sepal.Length,iris$Species,mean),0)
?mtcars
with(mtcars, tapply(hp, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))[3]
round(with(mtcars, tapply(hp, cyl, mean))[3] - with(mtcars, tapply(hp, cyl, mean))[1],0)
debug(ls)
ls
install.packages("profvis")
#install.packages("profvis")
library(profvis)
data(diamonds,package = "ggplot2")
rm(list = ls())
#install.packages("profvis")
library(profvis)
data(diamonds,package = "ggplot2")
plot(price ~ carat,data = diamonds)
m = lm(price ~ carat, data = diamonds)
abline(m,col= "red")
rm(list = ls())
profvis(expr = {
data(diamonds,package = "ggplot2")
plot(price ~ carat,data = diamonds)
m = lm(price ~ carat, data = diamonds)
abline(m,col= "red")
})
rm(list = ls())
profvis({
data <- data.frame(value = runif(3e4))
data$sum[1] <- data$value[1]
for (i in seq(2, nrow(data))) {
data$sum[i] <- data$sum[i-1] + data$value[i]
}
})
rm(list = ls())
profvis({
csum <- function(x) {
if (length(x) < 2) return(x)
sum <- x[1]
for (i in seq(2, length(x))) {
sum[i] <- sum[i-1] + x[i]
}
sum
}
data$sum <- csum(data$value)
})
rm(list = ls())
profvis({
data <- data.frame(value = runif(3e4))
csum <- function(x) {
if (length(x) < 2) return(x)
sum <- x[1]
for (i in seq(2, length(x))) {
sum[i] <- sum[i-1] + x[i]
}
sum
}
data$sum <- csum(data$value)
})
set.seed(1)
rpois(5, 2)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
Rprof(tmp <- tempfile())
example(glm)
Rprof()
summaryRprof(tmp)
Rprof(tmp <- tempfile())
library(datasets)
Rprof()
system.time()
library(swirl)
swirl()
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,n = 10)
tail(plants,n = 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = T)
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10,replace = FALSE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),prob = c(0.3,0.7))
sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips = sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips <- sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(n = 1,size = 100,prob = 0.7)
swirl()
flips2 <- sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips2 <- rbinom(n = 100,size = 1,prob = 0.7)
head(flips2)
flips2
sum(flips2)
?rbinom
?rnorm
rnorm(10)
rnorm(10,mean = 100)
rnorm(10,mean = 100,sd = 25)
rpois(n = 5,lambda = 10)
my_pois <- rpois(n = 5,lambda = lambda)
my_pois <- replicate(n = 5,lambda = lambda)
my_pois <- replicate(n = 100,rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data("cars")
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed,y = cars$dist)
plot(x = cars$dist,y = cars$speed)
plot(x = cars$speed,y = cars$dist,xlab = "Speed")
plot(x = cars$speed,y = cars$dist,xlab = "Speed",ylab = "Stopping Distance")
plot(x = cars$speed,y = cars$dist,ylab = "Stopping Distance")
plot(x = cars$speed,y = cars$dist,xlab = "Speed",ylab = "Stopping Distance")
plot(x = cars$speed,y = cars$dist,main = "My Plot")
plot(cars,main = "My Plot")
plot(cars,main = "My Plot",sutitle = "My Plot Subtitle")
plot(cars,sub = "My Plot Subtitle")
plot(cars,col = 2)
plot(cars,xlim = c(10,15))
plot(cars,pch = 2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl,data = mtcars)
hist(mtcars$mpg)
rm(list = ls())
T == 1
0 == F
rep(c(0,3),each = 5)
library(swirl)
swirl()
View(dataFrame)
dist(dataFrame)
class(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = 0.4, col = "blue")
abline(h = 0.4, col = "red")
5
abline(h = 0.05, col = "green")
12
abline(h = 0.05, col = "green")
dist(dFsm)
hc
class(dataMatrix)
dim(dataMatrix)
heatmap(dataMatrix,col = cm.colors(25))
dim(mt)
heatmap(mt)
mt
class(denmt)
plot(denmt)
distmt
rm(list = ls())
library(swirl)
swirl()
5+5
download.file(url = "https://github.com/DataScienceSpecialization/courses/blob/master/04_ExploratoryAnalysis/kmeansClustering/K-meansClustering_169.pdf",
destfile = "C:/Users/RAUL/Desktop/PC/2.Estudio/6.Data_Science/Curso4_Exploratory_Data_Analysis/Week3/Material/k-meansClustering_169.pdf",
mode = "wb")
swirl()
cmat
points(x = cx,y = cy,col = c("red","orange","purple"),pch = 3,cex = 2, lwd = 2)
mdist(x = dataFrame$x,y = dataFrame$y,cx = cx,cy = cy)
mdist(x,y,cx,cy)
install.packages("packrat")
library(packrat)
swirl()
library(swirl)
swirl()
swirl()
swirl()
cmat
points(x = cx,y = cy,col = c("red","orange","purple"),pch = 3,cex = 2, lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp,MARGIN = 2,FUN = which.min)
points(x = x,y = y,pch = 19,cex = 2, col = cols1[newClust])
tapply(X = x,INDEX = newClust,FUN = mean)
tapply(X = y,INDEX = newClust,FUN = mean)
points(x = newCx,y = newCy,col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x,y,newCx,newCy)
apply(X = distTmp2,MARGIN = 2,FUN = which.min)
points(x = x,y = y,pch = 19,cex = 2, col = cols1[newClust2]) # update the clusters
tapply(X = x,INDEX = newClust2,FUN = mean)
tapply(X = y,INDEX = newClust2,FUN = mean)
points(x = finalCx,y = finalCy,col = cols1,pch = 19, cex = 2,lwd = 2)
points(finalCx,finalCy,col = cols1,pch = 19, cex = 2,lwd = 2)
points(finalCx,finalCy,col = cols1,pch = 9, cex = 2,lwd = 2)
kmeans(x = dataFrame,centers = 3)
kmObj$iter
points(x = x,y = y,col = kmObj$cluster,pch = 19,cex = 2)
points(x,y,col = kmObj$cluster,pch = 19,cex = 2)
plot(x,y,col = kmObj$cluster,pch = 19,cex = 2)
points(kmObj$centers,col = c("black","red","green"),pch = 3, cex = 3, lwd = 3)
plot(x,y, col = kmeans(dataFrame,6)$cluster,pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster,pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster,pch = 19, cex = 2)
rm(list = ls())
load(file = "C:/Users/RAUL/Desktop/PC/3.Trabajo/3.Best/Paquetes2/ENAHOR/data/Modulo01.rda")
Modulo01 = data
save(Modulo01,file = "C:/Users/RAUL/Desktop/PC/3.Trabajo/3.Best/Paquetes2/ENAHOR/data/Modulo01.rda")
rm(list = ls())
load(file = "C:/Users/RAUL/Desktop/PC/3.Trabajo/3.Best/Paquetes2/ENAHOR/data/Modulo01.rda")
load(file = "C:/Users/RAUL/Desktop/PC/3.Trabajo/3.Best/Paquetes2/ENAHOR/data/Modulo02.rda")
Modulo02 = data
save(Modulo02,file = "C:/Users/RAUL/Desktop/PC/3.Trabajo/3.Best/Paquetes2/ENAHOR/data/Modulo02.rda")
load(file = "C:/Users/RAUL/Desktop/PC/3.Trabajo/3.Best/Paquetes2/ENAHOR/data/Modulo03.rda")
Modulo03 = data
save(Modulo03,file = "C:/Users/RAUL/Desktop/PC/3.Trabajo/3.Best/Paquetes2/ENAHOR/data/Modulo03.rda")
load(file = "C:/Users/RAUL/Desktop/PC/3.Trabajo/3.Best/Paquetes2/ENAHOR/data/Modulo04.rda")
Modulo04 = data
save(Modulo04,file = "C:/Users/RAUL/Desktop/PC/3.Trabajo/3.Best/Paquetes2/ENAHOR/data/Modulo04.rda")
load(file = "C:/Users/RAUL/Desktop/PC/3.Trabajo/3.Best/Paquetes2/ENAHOR/data/Modulo05.rda")
Modulo05 = data
save(Modulo05,file = "C:/Users/RAUL/Desktop/PC/3.Trabajo/3.Best/Paquetes2/ENAHOR/data/Modulo05.rda")
rm(list = ls())
rm(list = ls())
library(devtools)
library(pemaps)
data("departamental")
head(departamental)
class(departamental)
plot(departamental)
dim(departamental)
plot(departamental[,1])
plot(departamental[,2])
plot(departamental[1:12,2])
plot(departamental[1,2])
plot(departamental[1:5,2])
plot(departamental[1:5,3])
plot(departamental[,1],col = departamental$NOMBDEP)
plot(departamental[,1],col = departamental$NOMBDEP)
summary(departamental)
mode(departamental)
names(departamental)
departamental@data
View(departamental@data)
data2 = departamental[departamental$FIRST_IDDP != "01"]
data2 = departamental[departamental$FIRST_IDDP != "01",]
plot(data2)
data2 = departamental[departamental$FIRST_IDDP != "16",]
plot(data2)
rm(data2)
centroides = coordinates(departamental)
plot(departamental)
centroides
departamental@data$NOMBDEP
text(centroides,labels = departamental@data$NOMBDEP,cex = 0.6)
plot(departamental)
text(centroides,labels = departamental@data$NOMBDEP,cex = 0.4)
class(departamental)
plot(departamental)
text(centroides,labels = departamental@data$NOMBDEP,cex = 0.5)
?classIntervals
??classIntervals
library(datasets)
library(reshape2)
rm(list = ls())
data("ChickWeight")
dim(ChickWeight)
head(ChickWeight)
str(ChickWeight)
?ChickWeight
table(ChickWeight$Diet)
table(ChickWeight$Chick)
View(ChickWeight)
table(ChickWeight$Chick,ChickWeight$Diet)
coplot(weight ~ Time | Chick, data = ChickWeight,
type = "b", show.given = FALSE)
require(graphics)
coplot(weight ~ Time | Chick, data = ChickWeight,
type = "b", show.given = FALSE)
head(ChickWeight)
wideCW = dcast(data = ChickWeight,Diet + Chick ~ Time,value.var = "Weight")
wideCW = dcast(data = ChickWeight,Diet + Chick ~ Time,value.var = "weight")
View(wideCW)
View(ChickWeight)
class(wideCW)
names(wideCW)
names(wideCW)[-c(1,2)]
names(wideCW)[-c(1,2)] =paste("time",names(wideCW)[-c(1,2)],sep = "")
library(dplyr)
wideCW = mutate(.data = wideCW,
gain = time21 - time0)
library(ggplot2)
names(ChickWeight)
ggplot(data = ChickWeight,aes(Time,weight)) +
geom_line(color = Diet) +
geom_smooth(method = "glm",col = "black")
ggplot(data = ChickWeight,aes(Time,weight)) +
geom_line() +
geom_smooth(method = "glm",col = "black")
ggplot(data = ChickWeight,aes(Time,weight)) +
geom_line() +
geom_smooth(method = "glm",col = "black") +
facet_grid(.~ Diet)
ggplot(data = ChickWeight,aes(Time,weight, color = Diet)) +
geom_line() +
geom_smooth(method = "glm",col = "black") +
facet_grid(.~ Diet)
ggplot(data = ChickWeight,aes(Time,weight,Chick,color = Diet)) +
geom_line() +
geom_smooth(method = "glm",col = "black") +
facet_grid(.~ Diet)
ggplot(data = ChickWeight,aes(Time,weight,color = factor(Chick))) +
geom_line()
ggplot(data = ChickWeight,aes(Time,weight)) +
geom_line() +
geom_smooth(method = "glm",col = "black") +
facet_grid(.~ Diet + Chick)
ggplot(data = ChickWeight,aes(Time,weight), color = factor(Chick)) +
geom_line() +
geom_smooth(method = "glm",col = "black") +
facet_grid(.~ Diet)
ggplot(data = ChickWeight,aes(Time,weight), color = factor(Chick)) +
geom_line()
ggplot(data = ChickWeight,aes(Time,weight, color = factor(Chick))) +
geom_line() +
geom_smooth(method = "glm",col = "black") +
facet_grid(.~ Diet)
ggplot(data = ChickWeight,aes(Time,weight, color = Diet)) +
geom_line() +
geom_smooth(method = "glm",col = "black") +
facet_grid(.~ Diet)
ggplot(data = ChickWeight,aes(Time,weight, color = Chick)) +
geom_line() +
geom_smooth(method = "glm",col = "black") +
facet_grid(.~ Diet)
ggplot(data = ChickWeight,aes(Time,weight, color = Chick)) +
geom_line() +
facet_grid(.~ Diet)
ggplot(data = ChickWeight,aes(Time,weight, color = Chick)) +
geom_line() +
facet_grid(.~ Diet) +
guides(colour = F)
ggplot(data = ChickWeight,aes(Time,weight, color = Chick)) +
geom_line(aes(x=Time, y=weight, col=Diet)) +
facet_grid(.~ Diet) +
guides(colour = F)
ggplot(data = ChickWeight,aes(Time,weight)) +
geom_line(aes(x=Time, y=weight, col=Chick)) +
facet_grid(.~ Diet) +
guides(colour = F)
ggplot(data = ChickWeight,aes(Time,weight)) +
geom_line(aes(x=Time, y=weight, col=Chick)) +
facet_grid(~ Diet) +
guides(colour = F)
ggplot(data = ChickWeight,aes(Time,weight)) +
geom_line(aes(x=Time, y=weight, col=Chick)) +
facet_grid(~ Diet) +
geom_smooth(method = "glm") +
guides(colour = F)
ggplot(data = ChickWeight,aes(Time,weight)) +
geom_line(aes(x=Time, y=weight, col=Chick)) +
facet_grid(~ Diet) +
geom_smooth(method = "glm", colour = "black") +
guides(colour = F)
meanWeight = ChickWeight %>%
group_by(Time,Diet) %>%
summarise(weight = mean(weight,na.rm = T))
View(meanWeight)
meanWeight = ChickWeight %>%
group_by(Time,Diet) %>%
summarise(weight = round(mean(weight,na.rm = T),1))
ggplot(data = ChickWeight,aes(x = Time,y =weight)) +
geom_line(aes(x=Time, y=weight, col=Chick)) +
facet_grid(~ Diet) +
geom_line(data = meanWeight,aes(x = Time,y = weight), color = "black")
ggplot(data = ChickWeight,aes(x = Time,y =weight)) +
geom_line(aes(x=Time, y=weight, col=Chick)) +
facet_grid(~ Diet) +
geom_line(data = meanWeight,aes(x = Time,y = weight), color = "black",size = 2)
ggplot(data = ChickWeight,aes(x = Time,y =weight)) +
geom_line(aes(x=Time, y=weight, col=Chick)) +
facet_grid(~ Diet) +
geom_line(data = meanWeight,aes(x = Time,y = weight), color = "black",size = 1.2)
ggplot(data = ChickWeight,aes(x = Time,y =weight)) +
geom_line(aes(x=Time, y=weight, col=Chick)) +
facet_grid(~ Diet) +
geom_line(data = meanWeight,aes(x = Time,y = weight), color = "black",size = 0.9)
ggplot(data = ChickWeight,aes(x = Time,y =weight)) +
geom_line(aes(x=Time, y=weight, col=Chick)) +
facet_grid(~ Diet) +
geom_line(data = meanWeight,aes(x = Time,y = weight), color = "black",size = 0.9) +
guides(colour = F)
wideCW14 = subset(wideCW,Diet %in% c(1,4))
rbind(
t.test(gain ~ Diet,data = wideCW14,paired = F,var.equal = T)$conf,
t.test(gain ~ Diet,data = wideCW14,paired = F,var.equal = F)$conf
)
sys.time|
sys.time()
Sys.time()
Sys.Date()
#install.packages("pkgdown")
library(pkgdown)
library(pkgdown)
build_site()
?sink()
getwd()
setwd(dir = "C:/Users/RAUL/Desktop/PC/3.Trabajo/3.Best/Paquetes2/ENAHOR")
build_site()
sink("_pkgdown.yml")
template_navbar()
template_reference()
sink()
build_site()
library(pkgdown)
build_site()
getwd()
build_site()
library(pkgdown)
pkgdown::build_site()
#install.packages("devtools")
#install.packages("pkgdown")
install.packages("Rcpp")
library(pkgdown)
build_site()
build_site()
